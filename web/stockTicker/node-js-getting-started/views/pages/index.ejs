<!DOCTYPE html>
<html>
  <head>
    <% include ../partials/header.ejs %>
  </head>

<body>

  <% include ../partials/nav.ejs %>


  <div class="jumbotron text-center">
    <div class="container">
      <h1>Search Stock Tickers</h1>
      <hr class="title_break center">
    </div>
  </div>
  <div class="container image">
    <img src="images/stocks.jpg"/>
    <p>This is a Single Page Node application deployed to Heroku. It is a simple app, which leaverages the Alphavantage API stock information. Enter a stock ticker below in order to recieve the current stock information for that company.</p>
  </div>
  <div class="center-input">
      <!-- <form action="/getStock" method="get"> -->
      <input type="text" name="ticker" id="ticker" placeholder="Enter Company Stock Ticker (Ex.'AMZN')">
      <input type="submit" id="getStock" value="Get Stock Prices" onClick="addTicker()">
      <!-- </form> -->
  </div>
  <div class="container">
      <div class="alert alert-info text-center" role="alert">
        <div id="resultSection">
          <h2>Stock Results</h2>
          <div id="dataResults">
          <p class="title">[ This section will be updated when a search is made... ]</p>
          </div>
      </div>
    </div>
  <hr>
    <div class="container">
      <div class="alert alert-info text-center" role="alert">
        <div id="pastHistory">
          <h2>Search History</h2>
          <div id="storedHistory">
          <p class="historyTitle"></p>
          <div id="ListDetails"><table id="stockList"></table></div>
          </div>
      </div>
    </div>
  <hr>
  <div class="row">
    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-link"></span>How to use the app</h3>
      <ul>
        <li>Use the typing field to enter part or all of a movie title.</li>
        <li>Up to ten movie titles from IMDb that best match your search word(s) will display in the <b>Search Results of Relevant Movies</b> section.</li>
        <li>The displayed movie posters are interactive - demonstrating hover, transition, and transform CSS effects</li>
        <ul>
          <li>Hover over the poster to trigger the appearance of the title information</li>
          <li>Click on the movie poster or image text to lookup the selected movie on IMDb's site.</li>
        </ul>  
      </ul>
    </div>

    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-info-sign"></span> How this Node app works</h3>
      <ul>
        <li>This app was deployed to Heroku by using Git on the repository.</li>

        <li>When Heroku received the source code, it fetched all the dependencies in the Node package.json</a>, creating a deployable slug.</li>
        <li>The platform then spins up a dyno, a lightweight container that provides an isolated environment in which the slug can be mounted and executed.</li>
      </ul>
    </div>
  </div> <!-- row -->
   <div class="alert alert-info text-center" role="alert">
    This Heroku Node app and single page application is the creation of Christopher David<br/> for the purpose of the CIT CS313 Final API Project.
  </div>
</div>

<script type="text/javascript">
  $('#getStock').click(function(event) {
      event.preventDefault();
      $.ajax({
          global: false,
          type: 'GET',
          url: '/getStock',
          dataType: 'html',
          data: {
              ticker: $("#ticker").val()
          },
          success: function (result) {
              console.log(result);
          },
          error: function (request, status, error) {
              $('#dataResults').html("<div class='stock'><p class='title warning'>>Please check your stock ticker symbol and resubmit your inquery</p></div>");
              serviceError();
          }
      })  
      .done(function(data){
        console.log('GET response:', JSON.stringify(data, "", 2));
        var obj = JSON.parse(data);
        var lastRefreshed = obj['Meta Data']['3. Last Refreshed'];
        var lastPrices = obj['Time Series (1min)'][lastRefreshed];

        var open = lastPrices['1. open'];
        var high = lastPrices['2. high'];
        var low = lastPrices['3. low'];
        var close = lastPrices['4. close'];
        var volume = lastPrices['5. volume'];
        var symbol = obj['Meta Data']['2. Symbol'];

        $('#dataResults').html("<div class='stock'><a href='https://www.marketwatch.com/investing/stock/" + symbol+ "' target='_blank'/'><p>Stock Ticker Symbol: " + symbol + "</p><p>This is the open price: " + open + "</p><p>This is the high price: " + high + "</p><p>This is the low price: " + low + "</p><p>This is the close price: " + close + "</p><p>This is today's volume: " + volume + "</p></a></div>");

          function stocks(ticker) {
                  this.ticker = ticker;
          }

          function addTicker() {
              var tickerDetail = document.getElementById('ticker');     
              var symbol = tickerDetail.value;
              
              var newSymbol = new stocks(ticker);
              var ListStorage = JSON.parse(localStorage.getItem("ListStorage"));
              if(ListStorage === null) {
                  ListStorage = Array();
              }
              ListStorage.push(newSymbol);
              localStorage.setItem("ListStorage", JSON.stringify(ListStorage)); 
              tickerDetail.value = "";
              updateTicker();
          }

          function deleteTicker(index) {
              var ListStorage = JSON.parse(localStorage.getItem("ListStorage"));
              ListStorage.splice(index,1);
              localStorage.setItem("ListStorage", JSON.stringify(ListStorage));
              updateTicker();
          }
          
          function updateTicker() {
              var table = document.getElementById('stockList');
              var div = document.getElementById('ListDetails');
              var ListStorage = JSON.parse(localStorage.getItem("ListStorage"));
              var newTable = document.createElement('table');
              newTable.id = 'stockList';
              var newHead = document.createElement('thead');
              var newRow = document.createElement('tr');
              
              newHead.appendChild(newRow);
              var newBody = document.createElement('tbody');
              
              if(ListStorage !== null) {
                  var count = 0;
                  ListStorage.forEach(function(rowData) {
                      var row = document.createElement('tr');

                      var nameCell = document.createElement('td');
                      nameCell.appendChild(document.createTextNode(rowData.symbol));
                      row.appendChild(nameCell);
                      var actionCell = document.createElement('td');
                      actionCell.innerHTML = "<input type=\"button\" name=\"button\" value=\"Delete\" onClick=\"deleteTicker(" + count + ")\">";
                      row.appendChild(actionCell);
                      newBody.appendChild(row);
                      count++;
                  });
              }
          
              newTable.appendChild(newHead);
              newTable.appendChild(newBody);
              div.replaceChild(newTable, table);
          }
          updateTicker();
      })
      .fail(function(jqXHR, textStatus, err){
        console.log('AJAX error response:', textStatus);
      });
  });

  </script>
  </body>
</html>
